{"version":3,"sources":["Input/Input.module.css","API/ContactsApi.js","Redux/Contacts/contacts-operations.js","Input/Input.jsx","ContactsList/ContactsList.jsx","FiltrByName/FiltrByName.jsx","Redux/Contacts/contacts-actions.js","Redux/Contacts/contacts-selectors.js","App.js","reportWebVitals.js","Redux/Contacts/contacts-reducer.js","Redux/store.js","index.js","ContactsList/contactslist.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","defaults","baseURL","getContacts","createAsyncThunk","_","rejectWithValue","contacts","Input","handleSubmit","handleChange","valueName","valueNumber","onSubmit","className","s","label","value","type","name","pattern","title","required","onChange","ContactList","onDeleteContacts","wrap","length","list","map","contact","item","discribe","number","onClick","id","FiltrByName","addContact","createAction","addContacts","filterForCont","deleteContact","getContactsSelector","state","items","getFilterQuery","filterQuery","arrayContacs","createSelector","filterLowerCase","toLowerCase","filter","includes","uuidv4","require","v4","App","useSelector","arrayAfterFilter","dispatch","useDispatch","useState","setName","setNumber","useEffect","contactsOperations","style","marginLeft","e","preventDefault","find","alert","currentTarget","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","fulfilled","action","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","MainReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,sB,6LCClB,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IAAMC,IAAN,aADlB,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBADPF,IAAMG,SAASC,QAAU,wBCElB,IAAMC,EAAcC,YACzB,yBADyC,uCAEzC,WAAOC,EAAP,oBAAAR,EAAA,6DAAYS,EAAZ,EAAYA,gBAAZ,kBAE2BV,IAF3B,cAEUW,EAFV,yBAGWA,GAHX,yDAKWD,EAAgB,EAAD,KAL1B,yDAFyC,yD,wBC8B5BE,EA/BD,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACtD,OACE,uBAAMC,SAAUJ,EAAhB,UACE,wBAAOK,UAAWC,IAAEC,MAApB,iBAEE,uBACEC,MAAON,EACPO,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUb,OAGd,2CAEE,uBACEO,MAAOL,EACPM,KAAK,MACLC,KAAK,SACLC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUb,OAGd,wBAAQQ,KAAK,SAAb,6B,gBC1BS,SAASM,EAAT,GAAsD,IAA/BjB,EAA8B,EAA9BA,SAAUkB,EAAoB,EAApBA,iBAC9C,OACE,sBAAKX,UAAWC,IAAEW,KAAlB,UACE,yCACCnB,EAASoB,OAAS,GACjB,oBAAIb,UAAWC,IAAEa,KAAjB,SACGrB,EAASsB,KAAI,SAACC,GAAD,OACZ,qBAAqBhB,UAAWC,IAAEgB,KAAlC,UACE,oBAAGjB,UAAWC,IAAEiB,SAAhB,UACGF,EAAQX,KADX,KACmBW,EAAQG,UAE3B,wBACEf,KAAK,SACLgB,QAAS,kBAAMT,EAAiBK,EAAQK,KAF1C,sBAJOL,EAAQK,YCT7B,IAQeC,EARK,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SAC5B,OACE,0DAEE,uBAAOL,KAAK,OAAOD,MAAOA,EAAOM,SAAUA,QCHpCc,G,MAAaC,YAAa,iBAC1BC,EAAcD,YAAa,yBAC3BE,EAAgBF,YAAa,mBAC7BG,EAAgBH,YAAa,mB,QCJ7BI,EAAsB,SAACC,GAAD,OAAWA,EAAMC,OACvCC,EAAiB,SAACF,GAAD,OAAWA,EAAMG,aAElCC,EAAeC,YAC1B,CAACN,EAAqBG,IACtB,SAACD,EAAOE,GACN,IAAMG,EAAe,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAaI,cACrC,OAAON,EAAMO,QAAO,SAACrB,GAAD,oBAClBA,QADkB,IAClBA,GADkB,UAClBA,EAASX,YADS,aAClB,EAAe+B,cAAcE,SAASH,SCShCI,EAAWC,EAAQ,IAAvBC,GAEO,SAASC,IACtB,IAAMZ,EAAQa,YAAYf,GACpBI,EAAcW,YAAYZ,GAC1Ba,EAAmBD,YAAYV,GAC/BY,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAO1C,EAAP,KAAa2C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO5B,EAAP,KAAe8B,EAAf,KAEAC,qBAAU,WACRL,EAASM,OACR,CAACN,IAqCJ,OACE,sBAAKO,MAAO,CAAEC,WAAY,QAA1B,UACE,2CACA,cAAC,EAAD,CACE1D,aA3Be,SAAC2D,GACpBA,EAAEC,iBACF,IAAMvC,EAAU,CACdK,GAAIkB,IACJlC,OACAc,UAEEW,EAAM0B,MAAK,SAACxC,GAAD,OAAaA,EAAQX,OAASA,KAC3CoD,MAAM,GAAD,OAAIpD,EAAJ,4BAELwC,EAAStB,EAAWP,IAEtBgC,EAAQ,IACRC,EAAU,KAeNrD,aAzCe,SAAC0D,GACpB,MAAwBA,EAAEI,cAAlBrD,EAAR,EAAQA,KAAMF,EAAd,EAAcA,MACd,OAAQE,GACN,IAAK,OACH2C,EAAQ7C,GACR,MACF,IAAK,SACH8C,EAAU9C,GACV,MACF,QACE,SAgCAN,UAAWQ,EACXP,YAAaqB,IAEf,cAAC,EAAD,CAAahB,MAAO6B,EAAavB,SAhBV,SAAC6C,GAC1BT,EAASnB,EAAc4B,EAAEI,cAAcvD,WAgBrC,cAAC,EAAD,CACEV,SAAUmD,EACVjC,iBAhBgB,SAACgD,GACrBd,EAASlB,EAAcgC,UChE3B,I,MAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCER/B,EAAQuC,YAAc,IAAD,mBACxB9C,GAAa,SAACM,EAAD,OAAUyC,EAAV,EAAUA,QAAV,4BAA4BzC,GAA5B,CAAmCyC,OADxB,cAExB7C,GAAc,SAACI,EAAD,OAAUyC,EAAV,EAAUA,QAAV,4BAA4BzC,GAA5B,CAAmCyC,OAFzB,cAGxB3C,GAAgB,SAACE,EAAD,OAAUyC,EAAV,EAAUA,QAAV,OACfzC,EAAMQ,QAAO,qBAAGhB,KAAgBiD,QAJT,cAKxBjF,EAAYkF,WAAY,SAAChF,EAAGiF,GAAJ,OAAeA,EAAOF,WALtB,IAQrBtC,EAAcqC,YAAc,GAAD,eAC9B3C,GAAgB,SAACnC,EAAD,YAAM+E,YAEnBG,EAAYJ,aAAc,GAAD,mBAC5BhF,EAAYqF,SAAU,kBAAM,KADA,cAE5BrF,EAAYkF,WAAY,kBAAM,KAFF,cAG5BlF,EAAYsF,UAAW,kBAAM,KAHD,IAKzBC,EAAQP,YAAc,MAAD,mBACxBhF,EAAYsF,UAAW,SAACpF,EAAGiF,GAAJ,OAAeA,EAAOF,WADrB,cAExBjF,EAAYqF,SAAU,kBAAM,QAFJ,IAIZG,cAAgB,CAC7B/C,QACAE,cACAyC,YACAG,UC5BaE,EAHDC,YAAe,CAC3BC,QAASC,ICKXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1B1B,K,kBCnBAhF,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,kC","file":"static/js/main.4a490e88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__982rj\"};","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3013\";\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { fetchContacts } from \"API/ContactsApi\";\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n// export const getContacts = () => async (dispatch) => {\r\n//   dispatch(contactsActions.fetchContactsRecvest());\r\n//   try {\r\n//     const contacts = await fetchContacts();\r\n//     dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.fetchContactsError(error));\r\n//   }\r\n// };\r\n","import React from \"react\";\r\nimport s from \"./Input.module.css\";\r\nconst Input = ({ handleSubmit, handleChange, valueName, valueNumber }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          value={valueName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={valueNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport s from \"./contactslist.module.css\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContacts }) {\r\n  return (\r\n    <div className={s.wrap}>\r\n      <p>Contacs:</p>\r\n      {contacts.length > 0 && (\r\n        <ul className={s.list}>\r\n          {contacts.map((contact) => (\r\n            <li key={contact.id} className={s.item}>\r\n              <p className={s.discribe}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onDeleteContacts(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst FiltrByName = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nexport default FiltrByName;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/Add\");\r\nexport const addContacts = createAction(\"contacts/ADD_CONTACTS\");\r\nexport const filterForCont = createAction(\"contacts/Filter\");\r\nexport const deleteContact = createAction(\"contacts/DELETE\");\r\n// export const fetchContactsRecvest = createAction(\r\n//   \"/contacts/fetchContactsRecvest\"\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   \"/contacts/fetchContactsSuccess\"\r\n// );\r\n// export const fetchContactsError = createAction(\"/contacts/fetchContactsError\");\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nexport const getContactsSelector = (state) => state.items;\r\nexport const getFilterQuery = (state) => state.filterQuery;\r\n\r\nexport const arrayContacs = createSelector(\r\n  [getContactsSelector, getFilterQuery],\r\n  (items, filterQuery) => {\r\n    const filterLowerCase = filterQuery?.toLowerCase();\r\n    return items.filter((contact) =>\r\n      contact?.name?.toLowerCase().includes(filterLowerCase)\r\n    );\r\n  }\r\n);\r\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as contactsOperations from \"./Redux/Contacts/contacts-operations\";\nimport Input from \"./Input/Input\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport FiltrByName from \"./FiltrByName/FiltrByName\";\n\nimport \"./App.css\";\nimport {\n  addContact,\n  filterForCont,\n  deleteContact,\n} from \"./Redux/Contacts/contacts-actions\";\nimport {\n  getContactsSelector,\n  getFilterQuery,\n  arrayContacs,\n} from \"./Redux/Contacts/contacts-selectors\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\nexport default function App() {\n  const items = useSelector(getContactsSelector);\n  const filterQuery = useSelector(getFilterQuery);\n  const arrayAfterFilter = useSelector(arrayContacs);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (items.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleFilterChange = (e) => {\n    dispatch(filterForCont(e.currentTarget.value));\n  };\n  const deleteContacs = (contactId) => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div style={{ marginLeft: \"20px\" }}>\n      <h1>Phonebook</h1>\n      <Input\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        valueName={name}\n        valueNumber={number}\n      />\n      <FiltrByName value={filterQuery} onChange={handleFilterChange} />\n      <ContactsList\n        contacts={arrayAfterFilter}\n        onDeleteContacts={deleteContacs}\n      />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  addContacts,\r\n  filterForCont,\r\n  deleteContact,\r\n} from \"./contacts-actions\";\r\nimport { getContacts } from \"./contacts-operations\";\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [addContacts]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [getContacts.fulfilled]: (_, action) => action.payload,\r\n});\r\n\r\nconst filterQuery = createReducer(\"\", {\r\n  [filterForCont]: (_, { payload }) => payload,\r\n});\r\nconst isLoading = createReducer(false, {\r\n  [getContacts.pending]: () => true,\r\n  [getContacts.fulfilled]: () => false,\r\n  [getContacts.rejected]: () => false,\r\n});\r\nconst error = createReducer(null, {\r\n  [getContacts.rejected]: (_, action) => action.payload,\r\n  [getContacts.pending]: () => null,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filterQuery,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport MainReducer from \"./Contacts/contacts-reducer\";\r\nconst store = configureStore({\r\n  reducer: MainReducer,\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactslist_item__3HR4Y\",\"discribe\":\"contactslist_discribe__1CZob\"};"],"sourceRoot":""}